syntax = "proto3";


// 生成接口
// protoc -I. --go_out=plugins=grpc:. user.proto

// user 包
package user;

// 指定 go 的包路径及包名re
option go_package = "./user;user";

// User 服务及服务接口的定义
service User {
  // 一元消息类型
  rpc UserIndex(UserIndexRequest) returns (UserIndexResponse) {}
  rpc UserView(UserViewRequest) returns (UserViewResponse) {}
  rpc UserPost(UserPostRequest) returns (UserPostResponse) {}
  rpc UserDelete(UserDeleteRequest) returns (UserDeleteResponse) {}
  // return里加stream 表示服务端流式grpc调用
  rpc UserList(UserListRequest) returns (stream UserResponse){}
  // 参数里加stream 表示客户端流式grpc调用
  rpc UserPhoto(stream UserPhotoRequest) returns (UserPhotoResponse){}
  // 双向stream
  rpc UserSaveAll(stream UserRequest) returns (stream UserResponse){}
}

// 枚举类型
enum EnumUserSex {
  SEX_INIT = 0; // 枚举类型必须以 0 起始
  SEX_MALE = 1;
  SEX_FEMALE = 2;
}

// 用户实体模型
message UserEntity {
  string name = 1;
  int32 age = 2;
}

// User 服务的各个接口的请求/响应结构
message UserIndexRequest {
  int32 page = 1;
  int32 page_size = 2;
}

message UserIndexResponse {
  int32 err = 1;
  string msg = 2;
  // 返回一个 UserEntity 对象的列表数据
  repeated UserEntity data = 3;
}

message UserViewRequest {
  int32 uid = 1;
}

message UserViewResponse {
  int32 err = 1;
  string msg = 2;
  // 返回一个 UserEntity 对象
  UserEntity data = 3;
}

message UserPostRequest {
  string name = 1;
  string password = 2;
  int32 age = 3;
}

message UserPostResponse {
  int32 err = 1;
  string msg = 2;
}

message UserDeleteRequest {
  int32 uid = 1;
}

message UserDeleteResponse {
  int32 err = 1;
  string msg = 2;
}


message UserListRequest{

}

message UserResponse{
  UserEntity user = 1;
}

message UserPhotoRequest{
  bytes data = 1;
}

message UserPhotoResponse{
  bool isOk = 1;
}

message UserRequest{
  UserEntity user = 1;
}

